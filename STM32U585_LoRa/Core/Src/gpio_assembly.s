/*
 * gpio_assembly.s
 *
 *  Created on: Jul 7, 2025
 *      Author: peter
 */

.syntax unified
.cpu cortex-m33
.fpu softvfp
.thumb

.text

.global GPIOE_MODER_Set_Alt_Function
.global GPIOA_MODER_Set_Alt_Function
.global GPIOE_AFRH_Set_Alt_Function
.global GPIOA_AFRH_Set_Alt_Function
.global GPIOE_OSPEEDR_Set
.global GPIOA_OSPEEDR_Set
.global GPIOE_PUPDR_Set
.global GPIOE_PUPDR_MOSI_UP
.global GPIOE_PUPDR_MOSI_DOWN
.global GPIOE_PUPDR_MISO_UP
.global GPIOE_PUPDR_MISO_DOWN
.global GPIOE_PUPDR_SCK_UP
.global GPIOE_PUPDR_SCK_DOWN
.global GPIOE_PUPDR_NSS_UP
.global GPIOE_PUPDR_NSS_DOWN
.global GPIOE_PUPDR_RDY_UP
.global GPIOE_PUPDR_RDY_DOWN
.global GPIOE_PUPDR_CLEAR

.global GPIOE_MODER_BUSY_INPUT
.global GPIOE_PURDR_BUSY_NPUPD
.global GPIOE_PURDR_BUSY_UP
.global GPIOD_MODER_DIO_INPUT
.global GPIOD_PUPDR_DIO_NPUPD
.global GPIOD_IDR_DIO_GET
.global GPIOE_IDR_BUSY_GET

// Define global variables

.equ GPIOA_BASE_ADDR, 		0x42020000U
.equ GPIOB_BASE_ADDR, 		0x42020400U
.equ GPIOC_BASE_ADDR, 		0x42020800U
.equ GPIOD_BASE_ADDR, 		0x42020C00U
.equ GPIOE_BASE_ADDR,		0x42021000U
.equ GPIOF_BASE_ADDR,		0x42021400U
.equ GPIOG_BASE_ADDR,		0x42021800U
.equ GPIOH_BASE_ADDR,		0x42021C00U
.equ GPIOI_BASE_ADDR,		0x42022000U

.equ GPIOx_MODER_OFFSET,	0x00U
.equ GPIOx_OTYPER_OFFSET, 	0x04U
.equ GPIOx_OSPEEDR_OFFSET,  0x08U
.equ GPIOx_PUPDR_OFFSET, 	0x0CU
.equ GPIOx_IDR_OFFSET,		0x10U
.equ GPIOx_ODR_OFFSET,		0x14U
.equ GPIOx_BSRR_OFFSET,		0x18U
.equ GPIOx_AFRL_OFFSET,		0x20U
.equ GPIOx_AFRH_OFFSET,		0x24U

#AF5
#PE11-SPI1_RDY
#PE12-SPI1_NSS
#PE13-SPI1_SCK
#PE14-SPI1_MISO
#PE15-SPI1_MOSI

GPIOE_MODER_Set_Alt_Function:
	//PE11 PE12, PE13, PE14, PE15
	//MODER bits = 10: Alternate function mode
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_MODER_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x3
	LSLS	R3, R2, #22	//PE11
	MVNS	R3,	R3
	ANDS	R0, R3		//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #22
	ORRS	R0, R3
	MOVS	R2, 0x3
	LSLS	R3, R2, #24	//PE12
	MVNS	R3,	R3
	ANDS	R0, R3		//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #24
	ORRS	R0, R3
	MOVS	R2, 0x3
	LSLS	R3, R2, #26	//PE13
	MVNS	R3,	R3
	ANDS	R0, R3		//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #26
	ORRS	R0, R3
	MOVS	R2, 0x3
	LSLS	R3, R2, #28	//PE14
	MVNS	R3,	R3
	ANDS	R0, R3		//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #28
	ORRS	R0, R3
	MOVS	R2, 0x3
	LSLS	R3, R2, #30	//PE15
	MVNS	R3,	R3
	ANDS	R0, R3		//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #30
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR


#AF5
#PE11-SPI1_RDY
#PE12-SPI1_NSS
#PE13-SPI1_SCK
#PE14-SPI1_MISO
#PE15-SPI1_MOSI

GPIOE_AFRH_Set_Alt_Function:
	//0101: AF5 12,16,20,24,28
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_AFRH_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	#12
	MOVS	R2, 0xF
	LSLS	R2, #12
	MVNS	R2,	R2
	ANDS	R0, R2
	MOVS	R2, 0x5
	LSLS	R2, #12
	ORRS	R0, R2
	#16
	MOVS	R2, 0xF
	LSLS	R2, #16
	MVNS	R2,	R2
	ANDS	R0, R2
	MOVS	R2, 0x5
	LSLS	R2, #16
	ORRS	R0, R2
	#20
	MOVS	R2, 0xF
	LSLS	R2, #20
	MVNS	R2,	R2
	ANDS	R0, R2
	MOVS	R2, 0x5
	LSLS	R2, #20
	ORRS	R0, R2
	#24
	MOVS	R2, 0xF
	LSLS	R2, #24
	MVNS	R2,	R2
	ANDS	R0, R2
	MOVS	R2, 0x5
	LSLS	R2, #24
	ORRS	R0, R2
	#28
	MOVS	R2, 0xF
	LSLS	R2, #28
	MVNS	R2,	R2
	ANDS	R0, R2
	MOVS	R2, 0x5
	LSLS	R2, #28
	ORRS	R0, R2
	STR		R0,	[R1]
	BX LR

GPIOE_OSPEEDR_Set:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_OSPEEDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x3 //11 high-speed
	LSLS	R3, R2, #22
	ORRS	R0, R3
	LSLS	R3, R2, #24
	ORRS	R0, R3
	LSLS	R3, R2, #26
	ORRS	R0, R3
	LSLS	R3, R2, #28
	ORRS	R0, R3
	LSLS	R3, R2, #30
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

#PE11-SPI1_RDY
#PE12-SPI1_NSS
#PE13-SPI1_SCK
#PE14-SPI1_MISO
#PE15-SPI1_MOSI
//00: No pull-up, pull-down
//01: Pull-up
//10: Pull-down
GPIOE_PUPDR_Set:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2 //10: Pull-down
	LSLS	R3, R2, #24 //NSS
	ORRS	R0, R3
	MOVS	R2, 0x3 //00: Pull-down
	LSLS	R3, R2, #22 //RDY
	MVNS	R3, R3
	ANDS	R0, R3
	LSLS	R3, R2, #26 //SCK
	MVNS	R3, R3
	ANDS	R0, R3
	LSLS	R3, R2, #28 //MISO
	MVNS	R3, R3
	ANDS	R0, R3
	LSLS	R3, R2, #30 //MOSI
	MVNS	R3, R3
	ANDS	R0, R3
	STR		R0,	[R1]
	BX LR


#PE11-SPI1_RDY
#PE12-SPI1_NSS
#PE13-SPI1_SCK
#PE14-SPI1_MISO
#PE15-SPI1_MOSI
//00: No pull-up, pull-down
//01: Pull-up
//10: Pull-down
GPIOE_PUPDR_RDY_DOWN:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2
	LSLS	R3, R2, #22 //RDY
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_RDY_UP:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R3, R2, #22 //RDY
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_NSS_DOWN:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2
	LSLS	R3, R2, #24 //NSS
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_NSS_UP:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R3, R2, #24 //NSS
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_SCK_DOWN:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2
	LSLS	R3, R2, #26 //SCK
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_SCK_UP:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R3, R2, #26 //SCK
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_MISO_DOWN:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2
	LSLS	R3, R2, #28 //MISO
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_MISO_UP:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R3, R2, #28 //MISO
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_MOSI_DOWN:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x2
	LSLS	R3, R2, #30 //MOSI
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_MOSI_UP:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x1
	LSLS	R3, R2, #30 //MOSI
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

GPIOE_PUPDR_CLEAR:
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1,	R2
	LDR		R3, [R1]
	MOVS	R2, 0x3 //00: Pull-down
	LSLS	R4, R2, R0 //RDY
	MVNS	R4, R4
	ANDS	R3, R4
	STR		R3,	[R1]
	BX LR

//GPIOA

GPIOA_MODER_Set_Alt_Function:
	// Pin PA8 for MCO clock interrupt
	//MODER bits = 10: Alternate function mode
	LDR		R1, =GPIOA_BASE_ADDR
	LDR		R2, =GPIOx_MODER_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x3
	LSLS	R3, R2, #16 //PA8
	MVNS	R3,	R3
	ANDS	R0, R3	//clear bits
	MOVS	R2, 0x2
	LSLS	R3, R2, #16
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

/************************************************

AF0 (MCO): PA8 on CN13

***********************************************/
GPIOA_AFRH_Set_Alt_Function:
	//AF0 (MCO): PA8
	//0000: AF0
	LDR		R1, =GPIOE_BASE_ADDR
	LDR		R2, =GPIOx_AFRH_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	#PA8
	MOVS	R2, 0xF
	MVNS	R2,	R2
	ANDS	R0, R2  //clear bits
	STR		R0,	[R1]
	BX LR

GPIOA_OSPEEDR_Set:
	LDR		R1, =GPIOA_BASE_ADDR
	LDR		R2, =GPIOx_OSPEEDR_OFFSET
	ADDS	R1,	R2
	LDR		R0, [R1]
	MOVS	R2, 0x3 //11 high-speed
	LSLS	R3, R2, #16
	ORRS	R0, R3
	STR		R0,	[R1]
	BX LR

/************************************************
	Rail: CN14
	Rail Pin: D4
	STM Pin:  PE7
	GPIO for BUSY (LoRa)

	Rail: CN14
	Rail Pin: D2
	STM Pin:  PD15
	GPIO for DIO1 (LoRa - interrupt)
***********************************************/

.equ GPIOx_MODER_OFFSET,	0x00U
.equ GPIOx_OTYPER_OFFSET, 	0x04U
.equ GPIOx_OSPEEDR_OFFSET,  0x08U
.equ GPIOx_PUPDR_OFFSET, 	0x0CU
.equ GPIOx_ODR_OFFSET,		0x14U
.equ GPIOx_BSRR_OFFSET,		0x18U
.equ GPIOx_AFRL_OFFSET,		0x20U
.equ GPIOx_AFRH_OFFSET,		0x24U

GPIOE_MODER_BUSY_INPUT: //PE7
	LDR 	R1, =GPIOE_BASE_ADDR
	LDR 	R2, =GPIOx_MODER_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS 	R2, 0x3
	LSLS	R2, #14
	MVNS	R2, R2
	ANDS	R0, R2
	STR		R0, [R1]
	BX LR


GPIOE_PURDR_BUSY_NPUPD: //PE7
	LDR R1, =GPIOE_BASE_ADDR
	LDR R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS 	R2, 0x3
	LSLS	R2, #14
	MVNS	R2, R2
	ANDS	R0, R2
	STR		R0, [R1]
	BX LR

GPIOE_PURDR_BUSY_UP: //PE7
	LDR R1, =GPIOE_BASE_ADDR
	LDR R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS 	R2, 0x3
	LSLS	R2, #14
	MVNS	R2, R2
	ANDS	R0, R2	//clear bits
	MOVS 	R2, 0x1
	LSLS	R2, #14
	ORRS	R0, R2
	STR		R0, [R1]
	BX LR

GPIOE_IDR_BUSY_GET: //PE7
	LDR R1, =GPIOE_BASE_ADDR
	LDR R2, =GPIOx_IDR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	BX LR

GPIOD_MODER_DIO_INPUT: //PD15
	LDR R1, =GPIOD_BASE_ADDR
	LDR R2, =GPIOx_MODER_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS 	R2, 0x3
	LSLS	R2, #30
	MVNS	R2, R2
	ANDS	R0, R2
	STR		R0, [R1]
	BX LR

GPIOD_PUPDR_DIO_NPUPD: //PD15
	LDR R1, =GPIOD_BASE_ADDR
	LDR R2, =GPIOx_PUPDR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	MOVS 	R2, 0x3
	LSLS	R2, #30
	MVNS	R2, R2
	ANDS	R0, R2
	STR		R0, [R1]
	BX LR

GPIOD_IDR_DIO_GET: //PD15
	LDR R1, =GPIOD_BASE_ADDR
	LDR R2, =GPIOx_IDR_OFFSET
	ADDS	R1, R2
	LDR		R0, [R1]
	BX LR
